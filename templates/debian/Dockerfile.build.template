{% extends "Dockerfile.common.build.template" %}

{% block install %}
{% set distro = Distro.split(':') %}
# Combine all installation and removal steps in a single RUN command to reduce the final image size.
# This is because each Dockerfile command creates a new layer which necessarily adds size to the
# final image. This trick allows to decrease the image size by hundreds of MBs.
RUN apt-get update \
    && env DEBIAN_FRONTEND=noninteractive apt-get install -y \
        binutils \
        expect \
        libprotobuf-c-dev \
        locales \
        openssl \
        python3 \
        python3-cryptography \
        python3-protobuf \
        python3-pyelftools \
# Debian 12 and Ubuntu 23.04 adopted PEP 668, which dictates that `pip` can no longer install
# packages managed by the distro's general-purpose package manager, hence we use `apt-get`
        {%- if (distro[0] == "debian" and distro[1] | int >= 12) or
               (distro[0] == "ubuntu" and distro[1] | int >= 23) %}
           python3-click \
           python3-jinja2 \
           python3-tomli \
           python3-tomli-w \
        {%- else %}
           python3-pip \
           && /usr/bin/python3 -B -m pip install click jinja2 \
                              'tomli>=1.1.0' 'tomli-w>=0.4.0' \
# Since all needed pip packages are installed, we can uninstall python3-pip safely
           && apt-get remove -y python3-pip \
        {%- endif %}
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

{% if buildtype != "release" %}
RUN apt-get update \
    && env DEBIAN_FRONTEND=noninteractive apt-get install -y \
        gdb \
        less \
        libunwind8 \
        python3-pytest \
        strace \
        vim
{% endif %}

RUN locale-gen en_US.UTF-8
ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8
{% endblock %}
